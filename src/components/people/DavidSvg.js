import React from "react";
import {computePersonColor, David} from "../../domain/people";

function DavidSvg({handleHoveredPerson, setHoveredPerson, handlePickedPerson, zoom, hoveredPerson, pickedPerson}) {
    return (
        <svg
            id={"david"}
            data-name={David}
            onMouseOver={(e) => handleHoveredPerson(e)}
            onMouseLeave={() => setHoveredPerson(null)}
            onClick={(e) => handlePickedPerson(e)}
            xmlns="http://www.w3.org/2000/svg"
            width={127 * zoom}
            height={125 * zoom}
            fill="none"
            viewBox="0 0 636 617"
        >
            <g clipPath="url(#clip0_277_2943)">
                <path
                    onMouseOver={(e) => handleHoveredPerson(e)}
                    onMouseLeave={() => setHoveredPerson(null)}
                    onClick={(e) => handlePickedPerson(e)}
                    fill="#1B0D6B"
                    stroke="#1B0D6B"
                    strokeWidth="4.182"
                    d="M38.278 197.459h428.391c21.139 0 38.278 14.557 38.278 32.513v354.515c0 17.955-17.139 32.513-38.278 32.513H38.278C17.138 617 0 602.442 0 584.487V229.972c0-17.956 17.139-32.513 38.278-32.513z"
                ></path>
                <path
                    onMouseOver={(e) => handleHoveredPerson(e)}
                    onMouseLeave={() => setHoveredPerson(null)}
                    onClick={(e) => handlePickedPerson(e)}
                    fill="#fff"
                    stroke="#151924"
                    strokeWidth="4.182"
                    d="M501.564 274.421a4.86 4.86 0 00-.21-.22c3.431-3.762 50.099-89.678 50.759-100.758.15-2.566 1.31-5.809 3.13-9.367 1.8-3.515 4.14-7.15 6.51-10.457 2.35-3.3 4.69-6.238 6.45-8.351.45-.558.88-1.059 1.24-1.492a55.618 55.618 0 004.031 4.363c3.37 3.274 8.21 7.086 13.56 8.274v.002c1.36.295 2.619.383 3.739.122 1.2-.282 2.16-.962 2.75-2.01.55-.957.661-2.024.631-2.939-.02-.934-.2-1.916-.42-2.853-.26-1.108-.65-2.404-1.02-3.6-.21-.709-.421-1.382-.581-1.961-.23-.858-.41-1.597-.5-2.212-.08-.647-.04-.978 0-1.104.55-1.902 1.55-4.01 3.31-5.768 1.73-1.733 4.301-3.227 8.211-3.777 4.22-.594 8.999-.815 13.469-.047 4.47.766 8.49 2.493 11.4 5.68 1.29 1.402 2.41 4.068 3.29 7.735.85 3.585 1.391 7.812 1.731 12.035.65 8.469.41 16.631.14 19.043-.1.974-.63 2.784-1.65 5.187-1 2.352-2.42 5.128-4.19 7.993-3.56 5.754-8.44 11.678-14.11 15.313v-.001s-.091.046-.351.16c-.28.122-.66.283-1.13.484-.24.101-.51.214-.81.336-.83.348-1.839.77-2.959 1.252-3.05 1.304-7.05 3.079-11.13 5.163-4.07 2.079-8.291 4.498-11.771 7.107-3.41 2.555-45.469 82.455-46.679 85.697-.11.284-.21.327-.21.331-.04.021-.21.101-.63.071-.94-.063-2.41-.585-4.41-1.709-3.91-2.204-8.89-6.164-13.87-10.567-4.95-4.377-9.791-9.093-13.391-12.722a306.714 306.714 0 01-4.329-4.433v0z"
                ></path>
                <path
                    onMouseOver={(e) => handleHoveredPerson(e)}
                    onMouseLeave={() => setHoveredPerson(null)}
                    onClick={(e) => handlePickedPerson(e)}
                    fill={computePersonColor(David, hoveredPerson, pickedPerson)}
                    className={"colorable"}
                    d="M201.893 207.756c39.02-10.272 83.051-6.848 106.701 10.591 23.73 17.44 30.579 46.744 30.579 46.744s41.81 33.685 50.49 48.656c8.76 14.97 28.671 38.621 28.671 38.621l112.829-131.552s25.8 39.338 41.81 40.533c-8.76 18.713-22.77 60.441-30.42 80.428-7.64 19.988-39.42 81.703-87.43 92.931-48.02 11.228-79.16-5.575-79.16-5.575l33.05 150.266 78.52 36.79h-345.37c-50.48 0-103.52-26.199-96.67-96.673 4.3-44.037 13.93-143.019 65.46-209.193 0 0-14.97-32.092-3.75-58.928 11.23-26.836 73.34-38.064 94.69-43.639z"
                ></path>
                <path
                    onMouseOver={(e) => handleHoveredPerson(e)}
                    onMouseLeave={() => setHoveredPerson(null)}
                    onClick={(e) => handlePickedPerson(e)}
                    fill="#151924"
                    fillRule="evenodd"
                    d="M377.953 425.453l.03.019c.05.022.12.059.22.11.2.101.52.257.95.456.86.4 2.18.975 3.92 1.638 3.48 1.328 8.65 3.009 15.29 4.357 13.28 2.694 32.46 4.062 55.8-1.397 22.62-5.289 41.82-22.619 56.5-41.662 14.62-18.965 24.29-39.023 27.99-48.691 2.4-6.275 5.48-14.866 8.86-24.266 6.39-17.797 13.83-38.494 19.62-51.875-3.52-1.436-6.96-3.811-10.11-6.406-4.94-4.081-9.85-9.319-14.15-14.4-4.31-5.101-8.11-10.148-10.82-13.911-.45-.623-.87-1.211-1.25-1.759l-109.3 127.425a4.165 4.165 0 01-3.192 1.459 4.167 4.167 0 01-3.178-1.489l.19-.165-.19.165v-.002l-.01-.003-.05-.068-.18-.206c-.15-.18-.37-.445-.65-.787a548.73 548.73 0 01-10.26-12.752c-6.08-7.793-13.4-17.638-17.93-25.384l-.01-.015c-1.89-3.254-5.8-7.846-10.92-13.094-5.05-5.167-11.01-10.711-16.74-15.825a657.199 657.199 0 00-20.039-17.122c-.58-.471-1.031-.837-1.331-1.084-.15-.123-.27-.217-.35-.279l-.11-.088v-.004l1.49-1.858-1.49 1.858a4.146 4.146 0 01-1.449-2.302v-.003l-.01-.044c-.01-.042-.031-.111-.051-.206-.05-.189-.13-.482-.24-.869-.21-.773-.55-1.917-1.03-3.354a94.96 94.96 0 00-4.74-11.464c-4.5-9.151-11.77-20.203-22.91-28.389l-.01-.004c-11-8.11-27.09-13.178-45.49-14.889-18.34-1.706-38.62-.039-57.67 4.976l-.01.002c-2.83.74-6.29 1.561-10.19 2.487-11.26 2.671-26.22 6.222-40.62 11.26-9.65 3.378-18.8 7.347-26.15 12.019-7.42 4.708-12.59 9.865-14.92 15.441-5.15 12.304-4.36 26.066-2.1 37.071a99.358 99.358 0 003.76 13.399 90.059 90.059 0 001.46 3.804c.19.435.33.765.42.98.05.108.09.187.11.236l.03.056a4.15 4.15 0 01-.14 3.794c1.14 1.475 2.76 3.164 4.97 4.981 3.81 3.117 9.27 6.531 16.77 9.817 14.991 6.574 38.02 12.593 71.87 14.737l-.26 4.174c-34.21-2.167-57.74-8.263-73.29-15.081-7.78-3.409-13.58-7.01-17.74-10.412-1.98-1.626-3.61-3.226-4.9-4.759-23.92 31.932-38.41 71.303-47.45 108.405-9.3 38.182-12.77 73.653-14.92 95.672v.039c-3.3 33.997 7.8 56.743 25.33 71.126 17.73 14.555 42.56 20.959 67.18 20.959h326.59l-61.52-28.822a4.206 4.206 0 01-2.31-2.888l-33.04-150.265a4.181 4.181 0 01.9-3.616l-35.58-100.639 3.94-1.394 35.59 100.639c.41.078.82.22 1.21.428v.002l.01.001zm-1.99 3.68s1.64.885 4.75 2.113c10.43 4.123 37.41 12.113 74.41 3.462 48.01-11.228 79.79-72.943 87.43-92.931 2.47-6.462 5.61-15.196 9.02-24.69 6.44-17.938 13.86-38.59 19.6-51.754.62-1.419 1.22-2.752 1.8-3.984-1.32-.099-2.699-.456-4.129-1.028-12.72-5.088-29.121-27.19-35.231-35.93-1.56-2.218-2.45-3.575-2.45-3.575L418.334 352.368s-1.031-1.215-2.711-3.268c-5.75-7.006-19.19-23.775-25.96-35.353-8.68-14.971-50.49-48.656-50.49-48.656s-6.849-29.304-30.579-46.744c-23.65-17.439-67.681-20.863-106.701-10.591-2.71.707-6.07 1.505-9.9 2.414-26.38 6.26-74.98 17.792-84.79 41.225-11.22 26.836 3.75 58.928 3.75 58.928-.48.615-.96 1.234-1.43 1.855-50.24 66.112-59.76 163.58-64.02 207.25l-.01.088c-6.85 70.474 46.19 96.673 96.67 96.673h345.37l-78.52-36.79-33.05-150.266zm-211.1 34.835c2.39-22.083 4.5-46.391 5.72-62.031l4.17.325c-1.22 15.669-3.34 40.02-5.73 62.155-1.2 11.067-2.46 21.595-3.72 30.215-1.25 8.551-2.52 15.409-3.74 19.009l-3.959-1.349c1.08-3.176 2.299-9.65 3.559-18.264 1.25-8.547 2.51-19.017 3.7-30.06zm111.64-141.801c-4.49-17.362-17.17-33.318-22.93-39.081l2.95-2.957c6.05 6.043 19.28 22.629 24.03 40.991 2.55 9.854 5.9 14.325 8.95 18.393.27.368.54.733.81 1.098 1.68 2.26 3.28 4.614 4.47 7.804 1.18 3.186 1.91 7.088 2.01 12.455.29 16.039 7.54 24.945 10.68 27.217l-2.45 3.387c-4.31-3.117-12.1-13.305-12.41-30.526-.1-5.027-.77-8.439-1.75-11.075-.98-2.633-2.31-4.609-3.91-6.777-.26-.357-.53-.717-.81-1.084-3.14-4.198-6.88-9.194-9.64-19.845zm-42.58-1.361c-1.1-11.311-1.81-23.168-2.14-30.639l4.18-.18c.32 7.414 1.03 19.194 2.12 30.415 1.1 11.323 2.56 21.772 4.31 26.723 2.51 7.115 1.43 14.645.38 20.87-.09.498-.17.986-.25 1.465-.45 2.596-.85 4.909-.99 6.981-.17 2.471.05 4.205.72 5.395 3.11 5.608 11.1 21.944 14.68 29.363l-3.77 1.818c-3.6-7.466-11.53-23.672-14.57-29.15-1.26-2.274-1.42-5.015-1.23-7.717.16-2.302.6-4.863 1.04-7.448.08-.468.17-.937.24-1.405 1.07-6.287 1.91-12.807-.19-18.781-1.95-5.519-3.44-16.5-4.53-27.71z"
                    clipRule="evenodd"
                ></path>
                <path
                    onMouseOver={(e) => handleHoveredPerson(e)}
                    onMouseLeave={() => setHoveredPerson(null)}
                    onClick={(e) => handlePickedPerson(e)}
                    fill="#151924"
                    d="M269.933 119.613s27-17.838 24.13-38.62c-2.87-20.785-21.58-27.395-44.91-30.34-23.26-2.948-66.5-34.084-117.22-9.956-40.93 19.43-55.66 136.649 29.541 167.069 85.21 30.339 108.459-88.073 108.459-88.073v-.08z"
                ></path>
                <path
                    onMouseOver={(e) => handleHoveredPerson(e)}
                    onMouseLeave={() => setHoveredPerson(null)}
                    onClick={(e) => handlePickedPerson(e)}
                    fill="#fff"
                    d="M137.444 163.698c-9.368 9.559 10.914 29.157 22.227 37.76l6.19 49.351c16.296 3.4 53.331 16.508 69.812 22.638 4.588-5.558 14.346-18.422 16.675-25.41 2.329-6.987-2.206-29.203-4.765-39.438 7.059-9.528 21.599-30.491 23.293-38.114 2.117-9.529-4.916-77.86-10.772-74.578-4.685 2.627-19.994-1.51-27.063-3.907-4.302 4.142-15.248 12.618-24.616 13.383-11.711.956-19.359-2.868-32.981 2.629-13.623 5.497-6.453 51.623-13.384 52.579-6.931.956-12.906-8.843-24.616 3.107z"
                ></path>
                <path
                    onMouseOver={(e) => handleHoveredPerson(e)}
                    onMouseLeave={() => setHoveredPerson(null)}
                    onClick={(e) => handlePickedPerson(e)}
                    stroke="#151924"
                    strokeLinecap="round"
                    strokeWidth="4"
                    d="M211.463 172.26c11.209 2.375 35.423 5.7 42.604 0m-12.396-34.625c.71 3.554 2.9 10.816 5.984 11.433 3.854.771 6.681 5.91 2.441 8.673m-50.236-38.533c1.096-2.608 6.076-7.414 17.23-5.781m22.211-2.821c2.023-2.11 8.371-5.387 17.568-1.615m-94.809 71.391c.441 12.732 19.453 31.782 46.365 31.194m-48.754-10.118c-11.313-8.603-31.595-28.201-22.227-37.76 11.71-11.95 17.685-2.151 24.616-3.107 6.931-.956-.239-47.082 13.384-52.579 13.622-5.497 21.27-1.673 32.981-2.629 9.368-.765 20.314-9.24 24.616-13.383 7.069 2.397 22.378 6.534 27.063 3.907 5.856-3.283 12.889 65.049 10.772 74.578-1.694 7.623-16.234 28.586-23.293 38.114 2.559 10.235 7.094 32.451 4.765 39.438-2.329 6.988-12.087 19.852-16.675 25.41-16.481-6.13-53.516-19.238-69.812-22.638l-6.19-49.351z"
                ></path>
                <ellipse
                    cx="214.473"
                    cy="132.597"
                    fill="#151924"
                    rx="4.128"
                    ry="6.854"
                ></ellipse>
                <ellipse
                    cx="248.844"
                    cy="122.895"
                    fill="#151924"
                    rx="4.128"
                    ry="6.188"
                ></ellipse>
                <path
                    onMouseOver={(e) => handleHoveredPerson(e)}
                    onMouseLeave={() => setHoveredPerson(null)}
                    onClick={(e) => handlePickedPerson(e)}
                    fill="#fff"
                    stroke="#151924"
                    strokeWidth="4.182"
                    d="M609.337 113c1.979 11.937-7.82 22.977-21.869 24.657-14.059 1.682-27.048-6.634-29.028-18.571-1.98-11.937 7.809-22.976 21.868-24.657 14.05-1.68 27.049 6.634 29.029 18.571z"
                ></path>
            </g>
            <defs>
                <clipPath id="clip0_277_2943">
                    <path
                    onMouseOver={(e) => handleHoveredPerson(e)}
                    onMouseLeave={() => setHoveredPerson(null)}
                    onClick={(e) => handlePickedPerson(e)}fill="#fff" d="M0 0H636V617H0z"></path>
                </clipPath>
            </defs>
        </svg>
    );
}

export default DavidSvg;